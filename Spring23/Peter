## Introduction:
Throughout this semester we made it our biggest priority to switch operating systems for the Nao robots from Choreographe to Ros. While some members have found some success on their Nao projects, I have only encountered challenges and errors. I would like to document the process and challenges that arose from this project.

## Ubuntu and Ros:
In order to run the Ros program, we learned that we needed to install an older version of the Ubuntu operating system. This process was rather simple for me and I was able to have the operating system running very quickly. However, when I tried to install Ros I ran into a massive issue. While the installation process seemed simple, just open up the terminal and input some code, I don’t think my device was able to read and install it correctly due to the strange nature of my OS. My computer was an open box device, and a while back I had the OS reset to fix a smaller issue. This seemingly made it impossible for me to run Ros. In the wake of this revelation, I chose to instead try to work with Choregraphe.

## Choregraphe:
While it seemed like I would be able to make something run with Choregraphe, the same problem with the OS acted up again. I wasn’t able to run my installation of the program because it couldn’t find the right OS files which again made it seemingly impossible for me to use the program. 

## Final Thoughts:
Despite how limited I felt with this project, there were some things that the team was able to get running. The teacher was able to get Ros2 up and running on a laptop, which meant we technically had a device that successfully made the transition to Ros, though that as well had many limitations. That became the main center piece of our presentation and what I ended up documenting in the final poster. While I’m disappointed in my lack of progress, failure is an inevitable process with any programming endeavor and I wish I had put in more work to explore other options. 
